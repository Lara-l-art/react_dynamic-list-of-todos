{"version":3,"sources":["api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["apiUrl","getUserbyId","id","fetch","then","response","json","TodoList","state","query","checked","values","selected","handleChange","event","setState","target","value","handleQuerySearch","handleChecking","filteringTodos","unfilteredTodos","filter","todo","title","userId","completed","item","insensitiveQuery","toLowerCase","includes","this","props","todos","selectUser","needTodos","className","type","placeholder","onChange","map","key","onClick","readOnly","React","Component","initialUser","notFoundUser","name","email","phone","CurrentUser","user","chooseNewUser","person","data","prevProps","prevState","snapshot","App","selectedUserId","clearUser","tasks","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43b31578.chunk.js","sourcesContent":["const apiUrl = `https://mate-api.herokuapp.com`;\n\nexport function getTodos() {\n  return fetch(`${apiUrl}/todos`).then(response => response.json());\n}\n\nexport function getUserbyId(id) {\n  return fetch(`${apiUrl}/users/${id}`).then(response => response.json());\n}\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    checked: false,\n    values: [],\n    selected: '',\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      selected: event.target.value,\n    });\n  }\n\n  handleQuerySearch = (event) => {\n    this.setState({\n      query: event.target.value,\n    });\n  }\n\n  handleChecking = (value) => {\n    this.setState(state => ({\n      checked: !state.checked,\n      values: [...state.values, value],\n    }));\n  }\n\n  filteringTodos = (unfilteredTodos) => {\n    const { selected, query } = this.state;\n\n    return unfilteredTodos\n      .filter(todo => todo.title !== '' && todo.userId !== null)\n      .filter((todo) => {\n        if (selected === 'active') {\n          return todo.completed === false;\n        }\n\n        if (selected === 'completed') {\n          return todo.completed === true;\n        }\n\n        return todo;\n      })\n      .filter((item) => {\n        const insensitiveQuery = query.toLowerCase();\n        const insensitiveTitle = item.title.toLowerCase();\n\n        return insensitiveTitle.includes(insensitiveQuery);\n      });\n  }\n\n  render() {\n    const { todos, selectUser } = this.props;\n    const { query, checked, values, selected } = this.state;\n    const needTodos = this.filteringTodos(todos);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          placeholder=\"Type search word\"\n          value={query}\n          onChange={this.handleQuerySearch}\n        />\n\n        <select\n          value={selected}\n          onChange={this.handleChange}\n        >\n          <option value=\"\">chose your variant</option>\n          <option\n            value=\"all\"\n          >\n            all\n          </option>\n          <option\n            value=\"active\"\n          >\n            active\n          </option>\n          <option\n            value=\"completed\"\n          >\n            completed\n          </option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {needTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={`TodoList__item\n                ${(checked && values.includes(todo.id))\n                || (todo.completed === true)\n                ? 'TodoList__item--checked' : 'TodoList__item--unchecked'}`}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={(checked && values.includes(todo.id))\n                    || (todo.completed === true)}\n                    onClick={() => this.handleChecking(todo.id)}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n            TodoList__user-button\n            TodoList__user-button--selected\n            button\n          \"\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId)}\n                >\n                  {`User ${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    title: PropTypes.string,\n  }).isRequired).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUserbyId } from '../../api';\n\nconst initialUser = {};\nconst notFoundUser = {\n  name: 'not found',\n  email: 'not found',\n  phone: 'not found',\n};\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: initialUser,\n    userId: 0,\n  }\n\n  async componentDidMount() {\n    const person = await getUserbyId(this.props.userId);\n\n    this.setState({ user: person.data });\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    const { userId } = this.props;\n\n    if (prevState.userId !== userId) {\n      const person = await getUserbyId(userId);\n\n      if (person.data !== null) {\n        this.chooseNewUser(person.data);\n      } else {\n        this.chooseNewUser({\n          ...notFoundUser,\n          id: userId,\n        });\n      }\n    }\n  }\n\n  chooseNewUser = (person) => {\n    this.setState({\n      user: person,\n      userId: person.id,\n    });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <>\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>{`Selected user: ${user?.id}`}</span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{user?.name}</h3>\n          <p className=\"CurrentUser__email\">{user?.email}</p>\n          <p className=\"CurrentUser__phone\">{user?.phone}</p>\n        </div>\n      </>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const tasks = await getTodos();\n\n    this.setState({ todos: tasks.data });\n  }\n\n  selectUser = (id) => {\n    this.setState({ selectedUserId: id });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList todos={todos} selectUser={this.selectUser} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <>\n                <CurrentUser userId={selectedUserId} />\n                <button\n                  type=\"button\"\n                  onClick={this.clearUser}\n                >\n                  Clear\n                </button>\n              </>\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}